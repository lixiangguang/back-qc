import { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport styles from '../styles/UserManagement.module.css';\n\ntype User = {\n  id: number;\n  phone: string;\n  usedPoints: number;\n  remainingPoints: number;\n  type: string;\n  status: string;\n  lastLogin: string;\n  registerTime: string;\n};\n\nexport default function UserManagement() {\n  const router = useRouter();\n  const [isClient, setIsClient] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [phone, setPhone] = useState('');\n  const [userType, setUserType] = useState('全部类型');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(10);\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  const [userList, setUserList] = useState<User[]>([]);\n\n  // 从API获取用户数据\n  const fetchUsers = async () => {\n    setIsLoading(true);\n    try {\n      // 构建查询参数\n      const params = new URLSearchParams();\n      if (startDate) params.append('startDate', startDate);\n      if (endDate) params.append('endDate', endDate);\n      if (phone) params.append('phone', phone);\n      if (userType !== '全部类型') params.append('userType', userType);\n      params.append('page', currentPage.toString());\n      params.append('pageSize', pageSize.toString());\n      \n      const response = await fetch(`/api/users?${params.toString()}`);\n      const data = await response.json();\n      \n      setUserList(data.data);\n      setTotalUsers(data.total);\n    } catch (error) {\n      console.error('获取用户数据失败:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 当页面加载或搜索条件/页码变更时获取数据\n  useEffect(() => {\n    if (isClient) {\n      fetchUsers();\n    }\n  }, [isClient, currentPage, pageSize]);\n\n  const handleSearch = () => {\n    setCurrentPage(1);  // 重置为第一页\n    fetchUsers();\n  };\n\n  // 处理充值操作\n  const handleCharge = (userId: number) => {\n    console.log(`为用户ID ${userId} 充值`);\n    // 在实际应用中，这里会打开充值对话框或导航到充值页面\n  };\n\n  // 处理封禁/解封操作\n  const handleBanUnban = (userId: number, currentStatus: string) => {\n    const newStatus = currentStatus === '禁用' ? '正常' : '禁用';\n    console.log(`将用户ID ${userId} 的状态修改为 ${newStatus}`);\n    // 在实际应用中，这里会调用API来更新用户状态\n    // 然后重新获取用户列表\n    // fetchUsers();\n  };\n\n  // 检查是否在客户端，然后访问localStorage\n  useEffect(() => {\n    setIsClient(true);\n    const userPhone = localStorage.getItem('userPhone');\n    \n    if (!userPhone) {\n      router.push('/login');\n    }\n  }, [router]);\n\n  // 计算总页数\n  const totalPages = Math.ceil(totalUsers / pageSize);\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>用户管理 - 青宸道养智能体中心</title>\n        <meta name=\"description\" content=\"青宸道养智能体中心 - 用户管理页面\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      {isClient ? (\n        <>\n          <div className={styles.layout}>\n            {/* 侧边栏 */}\n            <div className={styles.sidebar}>\n              <div className={styles.logo}>\n                <span className={styles.logoText}>青宸道养智能体中心</span>\n              </div>\n              <nav className={styles.nav}>\n                <Link href=\"/\">\n                  <div className={styles.navItem}>\n                    <i className={styles.icon}>🏠</i>\n                    <span>开始工作</span>\n                  </div>\n                </Link>\n                <Link href=\"/inspiration\">\n                  <div className={styles.navItem}>\n                    <i className={styles.icon}>💡</i>\n                    <span>选题灵感</span>\n                  </div>\n                </Link>\n                <Link href=\"/content\">\n                  <div className={styles.navItem}>\n                    <i className={styles.icon}>📝</i>\n                    <span>内容生产</span>\n                  </div>\n                </Link>\n                <Link href=\"/publish\">\n                  <div className={styles.navItem}>\n                    <i className={styles.icon}>🔄</i>\n                    <span>作品发布</span>\n                  </div>\n                </Link>\n                <Link href=\"/user-management\" className={styles.active}>\n                  <div className={styles.navItemActive}>\n                    <i className={styles.icon}>👥</i>\n                    <span>用户管理</span>\n                  </div>\n                </Link>\n                <Link href=\"/tasks\">\n                  <div className={styles.navItem}>\n                    <i className={styles.icon}>✅</i>\n                    <span>每日任务</span>\n                  </div>\n                </Link>\n                <Link href=\"/data-statistics\">\n                  <div className={styles.navItem}>\n                    <i className={styles.icon}>📊</i>\n                    <span>数据统计</span>\n                  </div>\n                </Link>\n                <Link href=\"/system-settings\">\n                  <div className={styles.navItem}>\n                    <i className={styles.icon}>⚙️</i>\n                    <span>系统设置</span>\n                  </div>\n                </Link>\n              </nav>\n            </div>\n\n            {/* 主内容区域 */}\n            <div className={styles.content}>\n              <div className={styles.header}>\n                <h2 className={styles.pageTitle}>用户管理</h2>\n              </div>\n              \n              {/* 搜索区域 */}\n              <div className={styles.searchPanel}>\n                <div className={styles.searchForm}>\n                  <div className={styles.formGroup}>\n                    <label className={styles.label}>注册日期</label>\n                    <div className={styles.dateRangePicker}>\n                      <input \n                        type=\"date\" \n                        className={styles.dateInput}\n                        value={startDate}\n                        onChange={(e) => setStartDate(e.target.value)}\n                        placeholder=\"-/-/-\"\n                      />\n                      <span className={styles.dateRangeSeparator}>至</span>\n                      <input \n                        type=\"date\" \n                        className={styles.dateInput}\n                        value={endDate}\n                        onChange={(e) => setEndDate(e.target.value)}\n                        placeholder=\"-/-/-\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className={styles.formGroup}>\n                    <label className={styles.label}>类型</label>\n                    <select \n                      className={styles.select}\n                      value={userType}\n                      onChange={(e) => setUserType(e.target.value)}\n                    >\n                      <option value=\"全部类型\">全部类型</option>\n                      <option value=\"付费用户\">付费用户</option>\n                      <option value=\"免费用户\">免费用户</option>\n                    </select>\n                  </div>\n                  \n                  <div className={styles.formGroup}>\n                    <label className={styles.label}>手机号码</label>\n                    <input \n                      type=\"text\" \n                      className={styles.input}\n                      value={phone}\n                      onChange={(e) => setPhone(e.target.value)}\n                      placeholder=\"请输入手机号码\"\n                    />\n                  </div>\n                  \n                  <div className={styles.searchBtnWrapper}>\n                    <button className={styles.searchBtn} onClick={handleSearch}>\n                      <i className={styles.searchIcon}>🔍</i>\n                      搜索\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              {/* 用户列表 */}\n              <div className={styles.userListPanel}>\n                <div className={styles.panelHeader}>\n                  <h3 className={styles.panelTitle}>用户列表</h3>\n                </div>\n                \n                <div className={styles.tableContainer}>\n                  {isLoading ? (\n                    <div className={styles.tableLoading}>数据加载中...</div>\n                  ) : userList.length === 0 ? (\n                    <div className={styles.tableEmpty}>没有符合条件的用户数据</div>\n                  ) : (\n                    <table className={styles.userTable}>\n                      <thead>\n                        <tr>\n                          <th>No</th>\n                          <th>注册手机号</th>\n                          <th>已用积分</th>\n                          <th>剩余积分</th>\n                          <th>类型</th>\n                          <th>状态</th>\n                          <th>最后登录时间</th>\n                          <th>注册时间</th>\n                          <th>操作</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {userList.map((user) => (\n                          <tr key={user.id}>\n                            <td>{user.id}</td>\n                            <td>{user.phone}</td>\n                            <td>{user.usedPoints}</td>\n                            <td>{user.remainingPoints}</td>\n                            <td>{user.type}</td>\n                            <td>{user.status}</td>\n                            <td>{user.lastLogin}</td>\n                            <td>{user.registerTime}</td>\n                            <td>\n                              <div className={styles.actionBtns}>\n                                <button \n                                  className={styles.chargeBtn}\n                                  onClick={() => handleCharge(user.id)}\n                                >\n                                  充值\n                                </button>\n                                <button \n                                  className={user.status === '禁用' ? styles.unbanBtn : styles.banBtn}\n                                  onClick={() => handleBanUnban(user.id, user.status)}\n                                >\n                                  {user.status === '禁用' ? '解封' : '封禁'}\n                                </button>\n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  )}\n                </div>\n                \n                {/* 分页控件 */}\n                {!isLoading && userList.length > 0 && (\n                  <div className={styles.pagination}>\n                    <button \n                      className={styles.pageBtn}\n                      disabled={currentPage === 1}\n                      onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n                    >\n                      上一页\n                    </button>\n                    <div className={styles.pageInfo}>\n                      {currentPage} / {totalPages}\n                    </div>\n                    <button \n                      className={styles.pageBtn}\n                      disabled={currentPage >= totalPages}\n                      onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n                    >\n                      下一页\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className={styles.loading}>加载中...</div>\n      )}\n    </div>\n  );\n}